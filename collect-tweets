#!/usr/bin/env ruby
##
# Collect tweets that match a set of keywords and store them in the
# datastore.

require 'json'
require 'twitter'

require './lib/scraper.rb'

# Gracefully exit when we're interrupted.
trap "SIGINT" do
  puts "Exiting..."
  exit 130
end

# Connect to the datastore and create a streaming client.
db = Scraper.datastore
client = Scraper.stream

# Filter for keywords and store messages in the datastore.
client.filter(track: ARGV.join(",")) do |object|
  case object
  when Twitter::Tweet
    puts "TWEET: <%s> %s" % [object.id, object.text[0..50].gsub(/[\n\r]/, '')]
    db.sadd Scraper::TWEET_SET, object.id
    db.sadd Scraper::USER_SET, object.user.id
    document = JSON.generate({
        :status_id => object.id.to_s,
        :user_id => object.user.id.to_s,
        :created_at => object.created_at.to_s,
        :lang => object.lang.to_s,
        :source => object.source.to_s,
        :filter_level => object.filter_level.to_s,
        :in_reply_to_screen_name => object.in_reply_to_screen_name.to_s,
        :in_reply_to_status_id => object.in_reply_to_status_id.to_s,
        :in_reply_to_user_id => object.in_reply_to_user_id.to_s,
        :text => object.text.to_s
    })
    db.set Scraper::TWEET_KEY % {:id => object.id}, document
  when Twitter::Streaming::StallWarning
    warn "WARNING: Falling behind the stream"
  end
end
